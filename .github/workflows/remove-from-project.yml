name: Remove Issue from Project on Close
on:
  issues:
    types:
      - closed

jobs:
  remove_from_project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Remove Issue from Project
        run: |
          # Get the project ID of the specified project
          OWNER="Stardust-Labs-MC"
          PROJECT_NUMBER=1
          PROJECT_URL="https://api.github.com/repos/$OWNER/${{ github.repository }}/projects/$PROJECT_NUMBER"
          PROJECT_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$PROJECT_URL")
          PROJECT_ID=$(echo "$PROJECT_RESPONSE" | jq --raw-output '.id')

          if [ -z "$PROJECT_ID" ]; then
            echo "Project not found: $OWNER/${{ github.repository }}/$PROJECT_NUMBER"
            exit 1
          fi

          # Get the issue number
          ISSUE_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")

          # Get the cards URL associated with the project
          CARDS_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$PROJECT_URL" | jq --raw-output '.columns[].cards_url')

          if [ -z "$CARDS_URL" ]; then
            echo "Cards URL not found for project $PROJECT_NUMBER"
            exit 1
          fi

          # Find and remove the issue card from the project
          CARD_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$CARDS_URL" | jq --arg issue "$ISSUE_NUMBER" '.[] | select(.content_url | contains($issue)) | .id')

          if [ -z "$CARD_ID" ]; then
            echo "Issue card not found for issue #$ISSUE_NUMBER"
            exit 1
          fi

          curl -s -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$CARDS_URL/$CARD_ID"
